{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CBE\\\\Desktop\\\\LoanNew\\\\cbe-loan-frontend\\\\src\\\\Components\\\\Navigation\\\\Customer\\\\UpdateCompany.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { InputLabel, MenuItem, TextField, FormControl, Select } from \"@mui/material\";\nimport loanDataService from \"../../Company/Service\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport CompanyModal from \"./CompanyModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateCompany() {\n  _s();\n  const [isCompanyModalOpen, setIsCompanyModalOpen] = useState(false);\n  const [isCompanyTradeModalOpen, setIsCompanyTradeModalOpen] = useState(false);\n  const [companyTypes, setCompanyTypes] = useState([]);\n  const [entityTypes, setEntityTypes] = useState([]);\n  function handleGeneralCloseModal() {\n    setIsCompanyModalOpen(false);\n  }\n  // company modal start\n  function handleGeneralCloseModal() {\n    setIsCompanyModalOpen(false);\n  }\n  function handleGeneralOpenModal() {\n    setIsCompanyModalOpen(true);\n  }\n  //   const handleInputChange = (event) => {\n  //     const { name, value } = event.target;\n  //     setCompany({ ...company, [name]: value });\n  //   };\n  function handleGeneralCloseModal() {\n    isCompanyTradeModalOpen(false);\n  }\n  const {\n    Id\n  } = useParams();\n  const [company, setCompany] = useState({\n    Id: Id,\n    Name: \"\",\n    NoOfBranch: \"\",\n    EstablishmentYear: \"\",\n    TINNumber: \"\",\n    TINCertificate: \"\",\n    CompanyTypeID: \"\",\n    VATNumber: \"\",\n    VATCertificate: \"\",\n    EntityTypeID: \"\",\n    Address: {\n      Id: \"\",\n      Country: \"\",\n      Region: \"\",\n      ZoneSubCity: \"\",\n      Woreda: \"\",\n      City: \"\",\n      Kebele: \"\",\n      HouseNo: \"\",\n      BuildingNo: \"\",\n      StreetAddress: \"\"\n    },\n    AccountInfo: {\n      Id: \"\",\n      AccountNo: \"\",\n      CustomerId: \"\",\n      Branch: \"\",\n      District: \"\",\n      Other: \"\"\n    },\n    ContactInformation: {\n      Id: \"\",\n      DesignatedPersonFName: \"\",\n      DesignatedPersonMName: \"\",\n      DesignatedPersonLName: \"\",\n      Position: \"\",\n      MobileNo: \"\",\n      Telephone: \"\",\n      Email: \"\"\n    }\n  });\n  const upadteCompanyById = () => {\n    loanDataService.getCompanyById(Id).then(res => {\n      setCompany({\n        ...company,\n        Name: res.data.Result.Name,\n        NoOfBranch: res.data.Result.NoOfBranch,\n        EstablishmentYear: res.data.Result.EstablishmentYear,\n        TINNumber: res.data.Result.TINNumber,\n        TINCertificate: res.data.Result.TINCertificate,\n        CompanyTypeID: res.data.Result.CompanyTypeID,\n        VATNumber: res.data.Result.VATNumber,\n        VATCertificate: res.data.Result.VATCertificate,\n        EntityTypeID: res.data.Result.EntityTypeID,\n        Id: res.data.Result.Address.Id\n      });\n      // debugger\n    }).catch(err => console.log(err));\n  };\n  useEffect(() => {\n    upadteCompanyById();\n  }, []);\n  const fetchCompanies = () => {\n    loanDataService.getCompanyType().then(response => {\n      console.log(response.data.Result);\n      setCompanyTypes(response.data.Result);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n  useEffect(() => {\n    fetchCompanies();\n  }, []);\n  const fetchCompanyEntity = () => {\n    loanDataService.getEntitype().then(response => {\n      console.log(response.data.Result);\n      setEntityTypes(response.data.Result);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n  useEffect(() => {\n    fetchCompanyEntity();\n  }, []);\n  const navigation = useNavigate();\n  const updateCompanyInfo = () => {\n    loanDataService.updateCompany(Id, company).then(response => {\n      navigation(\"/company/1\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n  useEffect(() => {\n    updateCompanyInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateCompanyInfo,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 gap-4 submit-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-form \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative center justify-center flex-1 w-full max-w-full grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"Name\",\n              label: \"Name\",\n              variant: \"standard\",\n              color: \"secondary\",\n              size: \"\",\n              required: true,\n              sx: {\n                width: \"45ch\"\n              },\n              value: company.Name,\n              onChange: e => setCompany({\n                ...company,\n                Name: e.target.value\n              })\n              // onChange={handleInputChange}\n              ,\n              name: \"Name\",\n              className: \"w-full max-w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"NoOfBranch\",\n              label: \"Number Of Branch\",\n              variant: \"standard\",\n              color: \"secondary\",\n              size: \"\",\n              required: true,\n              value: company.NoOfBranch,\n              onChange: e => setCompany({\n                ...company,\n                NoOfBranch: e.target.value\n              })\n              // onChange={handleInputChange}\n              ,\n              name: \"NoOfBranch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"EstablishmentYear\",\n              label: \"Establishment Year\",\n              variant: \"standard\",\n              color: \"secondary\",\n              size: \"\",\n              required: true,\n              value: company.EstablishmentYear,\n              onChange: e => setCompany({\n                ...company,\n                EstablishmentYear: e.target.value\n              })\n              // onChange={handleInputChange}\n              ,\n              name: \"EstablishmentYear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"TINNumber\",\n              label: \"TIN Number\",\n              variant: \"standard\",\n              color: \"secondary\",\n              size: \"\",\n              required: true,\n              value: company.TINNumber,\n              onChange: e => setCompany({\n                ...company,\n                TINNumber: e.target.value\n              })\n              //onChange={handleInputChange}\n              ,\n              name: \"TINNumber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"TINCertificate\",\n              label: \"TIN Certificate\",\n              variant: \"standard\",\n              color: \"secondary\",\n              size: \"\",\n              required: true,\n              value: company.TINCertificate,\n              onChange: e => setCompany({\n                ...company,\n                TINCertificate: e.target.value\n              })\n              //onChange={handleInputChange}\n              ,\n              name: \"TINCertificate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"standard\",\n              sx: {\n                minWidth: 120\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"CompanyType\",\n                color: \"secondary\",\n                children: [\" \", \"Company Type\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                color: \"secondary\",\n                onChange: event => company.CompanyTypeID = event.target.value,\n                labelId: \"CompanyType\",\n                id: \"CompanyTypeSelect\"\n                // value={age}\n                ,\n                label: \"Company Type\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), companyTypes.map(company => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: company.Id,\n                  children: company.Name\n                }, company.Id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"VATNumber\",\n              label: \"VAT Number\",\n              variant: \"standard\",\n              color: \"secondary\",\n              size: \"\",\n              required: true,\n              value: company.VATNumber,\n              onChange: e => setCompany({\n                ...company,\n                VATNumber: e.target.value\n              })\n              // onChange={handleInputChange}\n              ,\n              name: \"VATNumber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"VATCertificate\",\n              label: \"VAT Certificate\",\n              variant: \"standard\",\n              color: \"secondary\",\n              size: \"\",\n              required: true,\n              value: company.VATCertificate,\n              onChange: e => setCompany({\n                ...company,\n                VATCertificate: e.target.value\n              })\n              //onChange={handleInputChange}\n              ,\n              name: \"VATCertificate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"standard\",\n              sx: {\n                minWidth: 120\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"EntityTypelbl\",\n                color: \"secondary\",\n                children: [\" \", \"Entity Type\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                color: \"secondary\",\n                onChange: event => company.EntityTypeID = event.target.value,\n                labelId: \"EntityTypelbl\",\n                id: \"EntityTypeSelect\",\n                label: \"Entity Type\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, this), entityTypes.map(entity => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  EntityTypeListID: entity.Id,\n                  value: entity.Id,\n                  children: entity.Name\n                }, entity.Id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-info\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateCompany, \"0I2CW/OiwDAWldNW4SvvZE72R9o=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateCompany;\nexport default UpdateCompany;\nvar _c;\n$RefreshReg$(_c, \"UpdateCompany\");","map":{"version":3,"names":["React","useEffect","useState","InputLabel","MenuItem","TextField","FormControl","Select","loanDataService","useNavigate","useParams","CompanyModal","jsxDEV","_jsxDEV","UpdateCompany","_s","isCompanyModalOpen","setIsCompanyModalOpen","isCompanyTradeModalOpen","setIsCompanyTradeModalOpen","companyTypes","setCompanyTypes","entityTypes","setEntityTypes","handleGeneralCloseModal","handleGeneralOpenModal","Id","company","setCompany","Name","NoOfBranch","EstablishmentYear","TINNumber","TINCertificate","CompanyTypeID","VATNumber","VATCertificate","EntityTypeID","Address","Country","Region","ZoneSubCity","Woreda","City","Kebele","HouseNo","BuildingNo","StreetAddress","AccountInfo","AccountNo","CustomerId","Branch","District","Other","ContactInformation","DesignatedPersonFName","DesignatedPersonMName","DesignatedPersonLName","Position","MobileNo","Telephone","Email","upadteCompanyById","getCompanyById","then","res","data","Result","catch","err","console","log","fetchCompanies","getCompanyType","response","e","fetchCompanyEntity","getEntitype","navigation","updateCompanyInfo","updateCompany","children","onSubmit","className","id","label","variant","color","size","required","sx","width","value","onChange","target","name","fileName","_jsxFileName","lineNumber","columnNumber","minWidth","event","labelId","map","entity","EntityTypeListID","_c","$RefreshReg$"],"sources":["C:/Users/CBE/Desktop/LoanNew/cbe-loan-frontend/src/Components/Navigation/Customer/UpdateCompany.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  InputLabel,\r\n  MenuItem,\r\n  TextField,\r\n  FormControl,\r\n  Select,\r\n} from \"@mui/material\";\r\nimport loanDataService from \"../../Company/Service\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport CompanyModal from \"./CompanyModal\";\r\nfunction UpdateCompany() {\r\n  const [isCompanyModalOpen, setIsCompanyModalOpen] = useState(false);\r\n  const [isCompanyTradeModalOpen, setIsCompanyTradeModalOpen] = useState(false);\r\n  const [companyTypes, setCompanyTypes] = useState([]);\r\n  const [entityTypes, setEntityTypes] = useState([]);\r\n\r\n  function handleGeneralCloseModal() {\r\n    setIsCompanyModalOpen(false);\r\n  }\r\n  // company modal start\r\n  function handleGeneralCloseModal() {\r\n    setIsCompanyModalOpen(false);\r\n  }\r\n\r\n  function handleGeneralOpenModal() {\r\n    setIsCompanyModalOpen(true);\r\n  }\r\n  //   const handleInputChange = (event) => {\r\n  //     const { name, value } = event.target;\r\n  //     setCompany({ ...company, [name]: value });\r\n  //   };\r\n  function handleGeneralCloseModal() {\r\n    isCompanyTradeModalOpen(false);\r\n  }\r\n  const { Id } = useParams();\r\n  const [company, setCompany] = useState({\r\n    Id: Id,\r\n    Name: \"\",\r\n    NoOfBranch: \"\",\r\n    EstablishmentYear: \"\",\r\n    TINNumber: \"\",\r\n    TINCertificate: \"\",\r\n    CompanyTypeID: \"\",\r\n    VATNumber: \"\",\r\n    VATCertificate: \"\",\r\n    EntityTypeID: \"\",\r\n    Address: {\r\n      Id:\"\",\r\n      Country:\"\",\r\n      Region:\"\",\r\n      ZoneSubCity:\"\",\r\n      Woreda:\"\",\r\n      City:\"\",\r\n      Kebele:\"\",\r\n      HouseNo:\"\",\r\n      BuildingNo:\"\",\r\n      StreetAddress:\"\"\r\n    },\r\n    AccountInfo: {\r\n      Id:\"\",\r\n      AccountNo:\"\",\r\n      CustomerId:\"\",\r\n      Branch:\"\",\r\n      District:\"\",\r\n      Other:\"\"\r\n    },\r\n    ContactInformation:{\r\n      Id:\"\",\r\n      DesignatedPersonFName:\"\",\r\n      DesignatedPersonMName:\"\",\r\n      DesignatedPersonLName:\"\",\r\n      Position:\"\",\r\n      MobileNo:\"\",\r\n      Telephone:\"\",\r\n      Email:\"\"\r\n    }\r\n  });\r\n  const upadteCompanyById = () => {\r\n    loanDataService\r\n      .getCompanyById(Id)\r\n      .then((res) => {\r\n        setCompany({\r\n          ...company,\r\n          Name: res.data.Result.Name,\r\n          NoOfBranch: res.data.Result.NoOfBranch,\r\n          EstablishmentYear: res.data.Result.EstablishmentYear,\r\n          TINNumber: res.data.Result.TINNumber,\r\n          TINCertificate: res.data.Result.TINCertificate,\r\n          CompanyTypeID: res.data.Result.CompanyTypeID,\r\n          VATNumber: res.data.Result.VATNumber,\r\n          VATCertificate: res.data.Result.VATCertificate,\r\n          EntityTypeID: res.data.Result.EntityTypeID,\r\n          Id:res.data.Result.Address.Id\r\n        });\r\n        // debugger\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  useEffect(() => {\r\n    upadteCompanyById();\r\n  }, []);\r\n  const fetchCompanies = () => {\r\n    loanDataService\r\n      .getCompanyType()\r\n      .then((response) => {\r\n        console.log(response.data.Result);\r\n        setCompanyTypes(response.data.Result);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchCompanies();\r\n  }, []);\r\n  const fetchCompanyEntity = () => {\r\n    loanDataService\r\n      .getEntitype()\r\n      .then((response) => {\r\n        console.log(response.data.Result);\r\n        setEntityTypes(response.data.Result);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchCompanyEntity();\r\n  }, []);\r\n  const navigation = useNavigate();\r\n  const updateCompanyInfo = () => {\r\n    loanDataService\r\n      .updateCompany(Id, company)\r\n      .then((response) => {\r\n        navigation(\"/company/1\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });   \r\n  };\r\n  useEffect(() => {\r\n    updateCompanyInfo();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {/* <CompanyModal> */}\r\n      <form onSubmit={updateCompanyInfo}>\r\n        <div className=\"grid grid-cols-1 gap-4 submit-form\">\r\n          <div className=\"submit-form \">\r\n            <div className=\"relative center justify-center flex-1 w-full max-w-full grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n              <TextField\r\n                id=\"Name\"\r\n                label=\"Name\"\r\n                variant=\"standard\"\r\n                color=\"secondary\"\r\n                size=\"\"\r\n                required\r\n                sx={{ width: \"45ch\" }}\r\n                value={company.Name}\r\n                onChange={(e) =>\r\n                  setCompany({ ...company, Name: e.target.value })\r\n                }\r\n                // onChange={handleInputChange}\r\n                name=\"Name\"\r\n                className=\"w-full max-w-full\"\r\n              />\r\n\r\n              <TextField\r\n                id=\"NoOfBranch\"\r\n                label=\"Number Of Branch\"\r\n                variant=\"standard\"\r\n                color=\"secondary\"\r\n                size=\"\"\r\n                required\r\n                value={company.NoOfBranch}\r\n                onChange={(e) =>\r\n                  setCompany({ ...company, NoOfBranch: e.target.value })\r\n                }\r\n                // onChange={handleInputChange}\r\n                name=\"NoOfBranch\"\r\n              />\r\n              <TextField\r\n                id=\"EstablishmentYear\"\r\n                label=\"Establishment Year\"\r\n                variant=\"standard\"\r\n                color=\"secondary\"\r\n                size=\"\"\r\n                required\r\n                value={company.EstablishmentYear}\r\n                onChange={(e) =>\r\n                  setCompany({ ...company, EstablishmentYear: e.target.value })\r\n                }\r\n                // onChange={handleInputChange}\r\n                name=\"EstablishmentYear\"\r\n              />\r\n              <TextField\r\n                id=\"TINNumber\"\r\n                label=\"TIN Number\"\r\n                variant=\"standard\"\r\n                color=\"secondary\"\r\n                size=\"\"\r\n                required\r\n                value={company.TINNumber}\r\n                onChange={(e) =>\r\n                  setCompany({ ...company, TINNumber: e.target.value })\r\n                }\r\n                //onChange={handleInputChange}\r\n                name=\"TINNumber\"\r\n              />\r\n              <TextField\r\n                id=\"TINCertificate\"\r\n                label=\"TIN Certificate\"\r\n                variant=\"standard\"\r\n                color=\"secondary\"\r\n                size=\"\"\r\n                required\r\n                value={company.TINCertificate}\r\n                onChange={(e) =>\r\n                  setCompany({ ...company, TINCertificate: e.target.value })\r\n                }\r\n                //onChange={handleInputChange}\r\n                name=\"TINCertificate\"\r\n              />\r\n              <FormControl variant=\"standard\" sx={{ minWidth: 120 }}>\r\n                <InputLabel id=\"CompanyType\" color=\"secondary\">\r\n                  {\" \"}\r\n                  Company Type\r\n                </InputLabel>\r\n                <Select\r\n                  color=\"secondary\"\r\n                  onChange={(event) =>\r\n                    (company.CompanyTypeID = event.target.value)\r\n                  }\r\n                  labelId=\"CompanyType\"\r\n                  id=\"CompanyTypeSelect\"\r\n                  // value={age}\r\n                  label=\"Company Type\"\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {companyTypes.map((company) => (\r\n                    <MenuItem key={company.Id} value={company.Id}>\r\n                      {company.Name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <TextField\r\n                id=\"VATNumber\"\r\n                label=\"VAT Number\"\r\n                variant=\"standard\"\r\n                color=\"secondary\"\r\n                size=\"\"\r\n                required\r\n                value={company.VATNumber}\r\n                onChange={(e) =>\r\n                  setCompany({ ...company, VATNumber: e.target.value })\r\n                }\r\n                // onChange={handleInputChange}\r\n                name=\"VATNumber\"\r\n              />\r\n              <TextField\r\n                id=\"VATCertificate\"\r\n                label=\"VAT Certificate\"\r\n                variant=\"standard\"\r\n                color=\"secondary\"\r\n                size=\"\"\r\n                required\r\n                value={company.VATCertificate}\r\n                onChange={(e) =>\r\n                  setCompany({ ...company, VATCertificate: e.target.value })\r\n                }\r\n                //onChange={handleInputChange}\r\n                name=\"VATCertificate\"\r\n              />\r\n              <FormControl variant=\"standard\" sx={{ minWidth: 120 }}>\r\n                <InputLabel id=\"EntityTypelbl\" color=\"secondary\">\r\n                  {\" \"}\r\n                  Entity Type\r\n                </InputLabel>\r\n                <Select\r\n                  color=\"secondary\"\r\n                  onChange={(event) =>\r\n                    (company.EntityTypeID = event.target.value)\r\n                  }\r\n                  labelId=\"EntityTypelbl\"\r\n                  id=\"EntityTypeSelect\"\r\n                  label=\"Entity Type\"\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {entityTypes.map((entity) => (\r\n                    <MenuItem\r\n                      key={entity.Id}\r\n                      EntityTypeListID={entity.Id}\r\n                      value={entity.Id}\r\n                    >\r\n                      {entity.Name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            <button className=\"btn btn-info\">Update</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {/* </CompanyModal> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateCompany;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}