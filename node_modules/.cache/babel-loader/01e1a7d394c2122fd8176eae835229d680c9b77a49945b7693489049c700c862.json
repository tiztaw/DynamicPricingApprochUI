{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CBE\\\\Desktop\\\\NewCredit\\\\cbe-wholesale-frontend\\\\src\\\\Components\\\\Enterprise\\\\accountDetail\\\\creditFacilityUtilizition\\\\ViewCreditFacilityUtilizition.jsx\";\nimport { TextField, FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { FaSpinner } from \"react-icons/fa\";\nimport { BiSkipNext } from \"react-icons/bi\";\nimport { MdModeEdit } from \"react-icons/md\";\nimport { IoTrashOutline } from \"react-icons/io5\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport CompanyNavigation from \"../../../Common/CompanyNavigation\";\nimport LoanIconButton from \"../../../Common/LoanIconButton\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport CompanyModal from \"../../Common/CompanyModal\";\nimport { Link } from \"react-router-dom\";\nimport CommonServices from \"../../Common/CommonServices\";\nimport AddCreditFacilityUtilizition from \"./AddCreditFacilityUtilizition\";\nimport ViewPreshipmentFacility from \"./preshipmentFacility/ViewPreshipmentFacility\";\nimport CreditFacilityUtilizitionService from \"./CreditFacilityUtilizitionService\";\nimport PreshipmentFacilityService from \"./preshipmentFacility/PreshipmentFacilityService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewCreditFacilityUtilizition = ({\n  // isCreditFacilityUtilizitionModalOpen,\n  // handleCreditFacilityUtilizitionCloseModal,\n  // accountDetialId,\n  // creditFacilityUtilizition,\n}) => {\n  // const [\n  //   CreditFacilityUtilizitionErrorLoading,\n  //   setCreditFacilityUtilizitionErrorLoading,\n  // ] = useState(false);\n  // const navigate = useNavigate();\n  // const { companyId } = useParams();\n  // const [loanTypeId, setLoanTypeId] = useState([]);\n  // const [creditFacilityUtilizitionId, setCreditFacilityUtilizitionId] =\n  //   useState([]);\n  // const [deleteLoading, setDeleteLoading] = useState(false);\n  // const [\n  //   deleteCreditFacilityUtilizitionError,\n  //   setCreditFacilityUtilizitionDeleteError,\n  // ] = useState(null);\n  // const [error, setError] = useState(null);\n\n  // const [\n  //   isCreditFacilityUtilizitionEditModalOpen,\n  //   setIsCreditFacilityUtilizitionEditModalOpen,\n  // ] = useState(false);\n  // function handleCreditFacilityUtilizitionEditOpenModal() {\n  //   setIsCreditFacilityUtilizitionEditModalOpen(true);\n  // }\n  // function handleCreditFacilityUtilizitionEditCloseModal() {\n  //   setIsCreditFacilityUtilizitionEditModalOpen(false);\n  // }\n  // // function handleCreditFacilityUtilizitionCloseModal() {\n  // //   setIsCreditFacilityUtilizitionModalOpen(false);\n  // // }\n  // // function handleCreditFacilityUtilizitionOpenModal() {\n  // //   setIsCreditFacilityUtilizitionModalOpen(true);\n  // // }\n  // function handleCreditFacilityUtilizitionEditCloseModal() {\n  //   setIsCreditFacilityUtilizitionEditModalOpen(false);\n  // }\n  // const handleInputChangeCreditFacilityUtilizition = (event) => {\n  //   const { name, value } = event.target;\n  //   setCreditFacilityUtilizitions({\n  //     ...creditFacilityUtilizitions,\n  //     [name]: value,\n  //   });\n  // };\n  // const initialCreditFacilityUtilizitionState = {\n  //   Id: null,\n  //   LoanTypeId: \"\",\n  //   LoanAccount: \"\",\n  //   BorrowingRshipLength: \"\",\n  // };\n  // const [creditFacilityUtilizitions, setCreditFacilityUtilizitions] = useState(\n  //   initialCreditFacilityUtilizitionState\n  // );\n  // const newCreditFacilityUtilizition = () => {\n  //   setCreditFacilityUtilizitions(initialCreditFacilityUtilizitionState);\n  //   // setSubmitted(false);\n  // };\n  // const saveCreditFacilityUtilizition = () => {\n  //   var data = {\n  //     LoanTypeId: loanTypeId,\n  //     LoanAccount: creditFacilityUtilizitions.LoanAccount,\n  //     BorrowingRshipLength: creditFacilityUtilizitions.BorrowingRshipLength,\n  //   };\n  //   CreditFacilityUtilizitionService.addCreditFacilityUtilizition(\n  //     data,\n  //     accountDetialId\n  //   )\n  //     .then((response) => {\n  //       setCreditFacilityUtilizitions({\n  //         Id: response.data.Id,\n  //         LoanTypeId: response.data.LoanTypeId,\n  //         LoanAccount: response.data.LoanAccount,\n  //         BorrowingRshipLength: response.data.BorrowingRshipLength,\n  //       });\n  //       if (response.data.Code === 200) {\n  //         setCreditFacilityUtilizitions(initialCreditFacilityUtilizitionState);\n  //         console.log(response.data);\n  //         // setHoldId(response.data.Result.Id);\n  //         creditFacilityUtilizition();\n  //         toast.success(\"Added successfully\", {\n  //           position: toast.POSITION.TOP_RIGHT,\n  //           toastId: \"CreditFacilityUtilizition\",\n  //         });\n  //       }\n  //     })\n  //     .catch((e) => {\n  //       console.log(e);\n  //     });\n  // };\n  // const handleDelete = (creditFacilityUtilizitions) => {\n  //   setDeleteLoading(true);\n  //   const confirm = window.confirm(\n  //     `Are you sure you want to delete ${creditFacilityUtilizitions.LoanAccount}?`\n  //   );\n  //   if (confirm) {\n  //     toast.success(\"Deleting\", {\n  //       position: toast.POSITION.TOP_RIGHT,\n  //       toastId: \"deleteCreditFacilityUtilizition\",\n  //     });\n  //     CreditFacilityUtilizitionService.deleteCreditFacilityUtilizitionsById(\n  //       creditFacilityUtilizitions.Id\n  //     )\n  //       .then(() => {\n  //         creditFacilityUtilizition((previousData) =>\n  //           previousData.filter(\n  //             (comp) => comp.Id !== creditFacilityUtilizitions.Id\n  //           )\n  //         );\n  //       })\n  //       .catch((e) => {\n  //         setCreditFacilityUtilizitionDeleteError(e);\n  //         setDeleteLoading(false);\n  //       });\n  //   }\n  // };\n  // const [editCreditFacilityUtilizition, setEditCreditFacilityUtilizition] =\n  //   useState({\n  //     //  Id: editAddresAccountDetailId,\n  //     LoanTypeId: \"\",\n  //     LoanAccount: \"\",\n  //     BorrowingRshipLength: \"\",\n  //   });\n  // const getCreditFacilityUtilizitionId = (editCreditFacilityUtilizitionId) => {\n  //   CreditFacilityUtilizitionService.getCreditFacilityUtilizitionById(\n  //     editCreditFacilityUtilizitionId\n  //   )\n  //     .then((res) => {\n  //       setEditCreditFacilityUtilizition({\n  //         ...editCreditFacilityUtilizition,\n  //         Id: editCreditFacilityUtilizitionId,\n  //         LoanTypeId: res.data.Result.LoanTypeId,\n  //         LoanAccount: res.data.Result.LoanAccount,\n  //         BorrowingRshipLength: res.data.Result.BorrowingRshipLength,\n  //       });\n  //     })\n  //     .catch((err) => {\n  //       if (err.response.data.StatusCode === 404) {\n  //         console.log(err.response.data.Message);\n  //       }\n  //     });\n  // };\n  // const updateCreditFacilityUtilizitionById = (e) => {\n  //   e.preventDefault();\n  //   CreditFacilityUtilizitionService.updateCreditFacilityUtilizitionById(\n  //     creditFacilityUtilizitionId,\n  //     editCreditFacilityUtilizition\n  //   )\n  //     .then((response) => {\n  //       if (response.data.Code === 200) {\n  //         creditFacilityUtilizition();\n  //         toast.success(\"Edited successfully\", {\n  //           position: toast.POSITION.TOP_RIGHT,\n  //           toastId: \"updateCreditFacilityUtilizitionSuccess\",\n  //         });\n  //       }\n  //     })\n  //     .catch((e) => {\n  //       toast.error(\"Something went wrong\", {\n  //         position: toast.POSITION.TOP_RIGHT,\n  //         toastId: \"updateCreditFacilityUtilizitionSuccess\",\n  //       });\n  //     });\n  // };\n\n  // const [loanTypeIdForCreditUtilization, setLoanTypeIdForCreditUtilization] =\n  //   useState([]);\n  // const getLoanType = () => {\n  //   setTimeout(() => {\n  //     CommonServices.getLoanType()\n  //       .then((response) => {\n  //         if (\n  //           response.data.Code === 200 ||\n  //           response.data.Message === \"Success\"\n  //         ) {\n  //           setLoanTypeIdForCreditUtilization(response.data.Result);\n  //           setCreditFacilityUtilizitionErrorLoading(false);\n  //         } else {\n  //           setCreditFacilityUtilizitionErrorLoading(false);\n  //           setError(\"Something went wrong\");\n  //         }\n  //       })\n  //       .catch((error) => {\n  //         if (error.response.data.StatusCode === 404) {\n  //           setError(\"Credit Facility Utilizition not found\");\n  //           setCreditFacilityUtilizitionErrorLoading(false);\n  //         } else if (error.response.data.StatusCode === 400) {\n  //           setError(\"Something went wrong\");\n  //           setCreditFacilityUtilizitionErrorLoading(false);\n  //         } else if (error.response.data.StatusCode === 401) {\n  //           navigate(\"/login\");\n  //         } else if (error.response.data.StatusCode === 403) {\n  //           navigate(\"/login\");\n  //         }\n  //       });\n  //   }, 1000);\n  // };\n  // useEffect(() => {\n  //   getLoanType();\n  // }, []);\n\n  // const [isPreshipmentFacilityModalOpen, setIsPreshipmentFacilityModalOpen] =\n  //   useState(false);\n  // function handlePreshipmentFacilityOpenModal() {\n  //   setIsPreshipmentFacilityModalOpen(true);\n  // }\n  // function handlePreshipmentFacilityCloseModal() {\n  //   setIsPreshipmentFacilityModalOpen(false);\n  // }\n  // const [preshipmentFacility, setPreshipmentFacility] = useState([]);\n  // const getPreshipmentFacility = (Id) => {\n  //   setTimeout(() => {\n  //     PreshipmentFacilityService.getAllPreshipmentByUtilizationId(Id)\n  //       .then((response) => {\n  //         if (\n  //           response.data.Code === 200 ||\n  //           response.data.Message === \"Success\"\n  //         ) {\n  //           setPreshipmentFacility(response.data.Result);\n  //           setCreditFacilityUtilizitionErrorLoading(false);\n  //         } else {\n  //           setCreditFacilityUtilizitionErrorLoading(false);\n  //           setError(\"Something went wrong\");\n  //         }\n  //       })\n  //       .catch((error) => {\n  //         if (error.response.data.StatusCode === 404) {\n  //           setError(\"Credit Facility Utilizition not found\");\n  //           setCreditFacilityUtilizitionErrorLoading(false);\n  //         } else if (error.response.data.StatusCode === 400) {\n  //           setError(\"Something went wrong\");\n  //           setCreditFacilityUtilizitionErrorLoading(false);\n  //         } else if (error.response.data.StatusCode === 401) {\n  //           navigate(\"/login\");\n  //         } else if (error.response.data.StatusCode === 403) {\n  //           navigate(\"/login\");\n  //         }\n  //       });\n  //   }, 1000);\n  // };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 flex items-center justify-center \",\n    children: /*#__PURE__*/_jsxDEV(CompanyModal\n    // isOpen={isCreditFacilityUtilizitionModalOpen}\n    // onClose={handleCreditFacilityUtilizitionCloseModal}\n    // title=\"credit facility utilizition detail \"\n    , {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n_c = ViewCreditFacilityUtilizition;\nexport default ViewCreditFacilityUtilizition;\nvar _c;\n$RefreshReg$(_c, \"ViewCreditFacilityUtilizition\");","map":{"version":3,"names":["TextField","FormControl","InputLabel","Select","MenuItem","useState","useEffect","FaSpinner","BiSkipNext","MdModeEdit","IoTrashOutline","useParams","useNavigate","CompanyNavigation","LoanIconButton","ToastContainer","toast","CompanyModal","Link","CommonServices","AddCreditFacilityUtilizition","ViewPreshipmentFacility","CreditFacilityUtilizitionService","PreshipmentFacilityService","jsxDEV","_jsxDEV","ViewCreditFacilityUtilizition","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/CBE/Desktop/NewCredit/cbe-wholesale-frontend/src/Components/Enterprise/accountDetail/creditFacilityUtilizition/ViewCreditFacilityUtilizition.jsx"],"sourcesContent":["import {\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { FaSpinner } from \"react-icons/fa\";\r\nimport { BiSkipNext } from \"react-icons/bi\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport { IoTrashOutline } from \"react-icons/io5\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport CompanyNavigation from \"../../../Common/CompanyNavigation\";\r\nimport LoanIconButton from \"../../../Common/LoanIconButton\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport CompanyModal from \"../../Common/CompanyModal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CommonServices from \"../../Common/CommonServices\";\r\nimport AddCreditFacilityUtilizition from \"./AddCreditFacilityUtilizition\";\r\nimport ViewPreshipmentFacility from \"./preshipmentFacility/ViewPreshipmentFacility\";\r\nimport CreditFacilityUtilizitionService from \"./CreditFacilityUtilizitionService\";\r\nimport PreshipmentFacilityService from \"./preshipmentFacility/PreshipmentFacilityService\";\r\nconst ViewCreditFacilityUtilizition = ({\r\n  // isCreditFacilityUtilizitionModalOpen,\r\n  // handleCreditFacilityUtilizitionCloseModal,\r\n  // accountDetialId,\r\n  // creditFacilityUtilizition,\r\n}) => {\r\n  // const [\r\n  //   CreditFacilityUtilizitionErrorLoading,\r\n  //   setCreditFacilityUtilizitionErrorLoading,\r\n  // ] = useState(false);\r\n  // const navigate = useNavigate();\r\n  // const { companyId } = useParams();\r\n  // const [loanTypeId, setLoanTypeId] = useState([]);\r\n  // const [creditFacilityUtilizitionId, setCreditFacilityUtilizitionId] =\r\n  //   useState([]);\r\n  // const [deleteLoading, setDeleteLoading] = useState(false);\r\n  // const [\r\n  //   deleteCreditFacilityUtilizitionError,\r\n  //   setCreditFacilityUtilizitionDeleteError,\r\n  // ] = useState(null);\r\n  // const [error, setError] = useState(null);\r\n\r\n  // const [\r\n  //   isCreditFacilityUtilizitionEditModalOpen,\r\n  //   setIsCreditFacilityUtilizitionEditModalOpen,\r\n  // ] = useState(false);\r\n  // function handleCreditFacilityUtilizitionEditOpenModal() {\r\n  //   setIsCreditFacilityUtilizitionEditModalOpen(true);\r\n  // }\r\n  // function handleCreditFacilityUtilizitionEditCloseModal() {\r\n  //   setIsCreditFacilityUtilizitionEditModalOpen(false);\r\n  // }\r\n  // // function handleCreditFacilityUtilizitionCloseModal() {\r\n  // //   setIsCreditFacilityUtilizitionModalOpen(false);\r\n  // // }\r\n  // // function handleCreditFacilityUtilizitionOpenModal() {\r\n  // //   setIsCreditFacilityUtilizitionModalOpen(true);\r\n  // // }\r\n  // function handleCreditFacilityUtilizitionEditCloseModal() {\r\n  //   setIsCreditFacilityUtilizitionEditModalOpen(false);\r\n  // }\r\n  // const handleInputChangeCreditFacilityUtilizition = (event) => {\r\n  //   const { name, value } = event.target;\r\n  //   setCreditFacilityUtilizitions({\r\n  //     ...creditFacilityUtilizitions,\r\n  //     [name]: value,\r\n  //   });\r\n  // };\r\n  // const initialCreditFacilityUtilizitionState = {\r\n  //   Id: null,\r\n  //   LoanTypeId: \"\",\r\n  //   LoanAccount: \"\",\r\n  //   BorrowingRshipLength: \"\",\r\n  // };\r\n  // const [creditFacilityUtilizitions, setCreditFacilityUtilizitions] = useState(\r\n  //   initialCreditFacilityUtilizitionState\r\n  // );\r\n  // const newCreditFacilityUtilizition = () => {\r\n  //   setCreditFacilityUtilizitions(initialCreditFacilityUtilizitionState);\r\n  //   // setSubmitted(false);\r\n  // };\r\n  // const saveCreditFacilityUtilizition = () => {\r\n  //   var data = {\r\n  //     LoanTypeId: loanTypeId,\r\n  //     LoanAccount: creditFacilityUtilizitions.LoanAccount,\r\n  //     BorrowingRshipLength: creditFacilityUtilizitions.BorrowingRshipLength,\r\n  //   };\r\n  //   CreditFacilityUtilizitionService.addCreditFacilityUtilizition(\r\n  //     data,\r\n  //     accountDetialId\r\n  //   )\r\n  //     .then((response) => {\r\n  //       setCreditFacilityUtilizitions({\r\n  //         Id: response.data.Id,\r\n  //         LoanTypeId: response.data.LoanTypeId,\r\n  //         LoanAccount: response.data.LoanAccount,\r\n  //         BorrowingRshipLength: response.data.BorrowingRshipLength,\r\n  //       });\r\n  //       if (response.data.Code === 200) {\r\n  //         setCreditFacilityUtilizitions(initialCreditFacilityUtilizitionState);\r\n  //         console.log(response.data);\r\n  //         // setHoldId(response.data.Result.Id);\r\n  //         creditFacilityUtilizition();\r\n  //         toast.success(\"Added successfully\", {\r\n  //           position: toast.POSITION.TOP_RIGHT,\r\n  //           toastId: \"CreditFacilityUtilizition\",\r\n  //         });\r\n  //       }\r\n  //     })\r\n  //     .catch((e) => {\r\n  //       console.log(e);\r\n  //     });\r\n  // };\r\n  // const handleDelete = (creditFacilityUtilizitions) => {\r\n  //   setDeleteLoading(true);\r\n  //   const confirm = window.confirm(\r\n  //     `Are you sure you want to delete ${creditFacilityUtilizitions.LoanAccount}?`\r\n  //   );\r\n  //   if (confirm) {\r\n  //     toast.success(\"Deleting\", {\r\n  //       position: toast.POSITION.TOP_RIGHT,\r\n  //       toastId: \"deleteCreditFacilityUtilizition\",\r\n  //     });\r\n  //     CreditFacilityUtilizitionService.deleteCreditFacilityUtilizitionsById(\r\n  //       creditFacilityUtilizitions.Id\r\n  //     )\r\n  //       .then(() => {\r\n  //         creditFacilityUtilizition((previousData) =>\r\n  //           previousData.filter(\r\n  //             (comp) => comp.Id !== creditFacilityUtilizitions.Id\r\n  //           )\r\n  //         );\r\n  //       })\r\n  //       .catch((e) => {\r\n  //         setCreditFacilityUtilizitionDeleteError(e);\r\n  //         setDeleteLoading(false);\r\n  //       });\r\n  //   }\r\n  // };\r\n  // const [editCreditFacilityUtilizition, setEditCreditFacilityUtilizition] =\r\n  //   useState({\r\n  //     //  Id: editAddresAccountDetailId,\r\n  //     LoanTypeId: \"\",\r\n  //     LoanAccount: \"\",\r\n  //     BorrowingRshipLength: \"\",\r\n  //   });\r\n  // const getCreditFacilityUtilizitionId = (editCreditFacilityUtilizitionId) => {\r\n  //   CreditFacilityUtilizitionService.getCreditFacilityUtilizitionById(\r\n  //     editCreditFacilityUtilizitionId\r\n  //   )\r\n  //     .then((res) => {\r\n  //       setEditCreditFacilityUtilizition({\r\n  //         ...editCreditFacilityUtilizition,\r\n  //         Id: editCreditFacilityUtilizitionId,\r\n  //         LoanTypeId: res.data.Result.LoanTypeId,\r\n  //         LoanAccount: res.data.Result.LoanAccount,\r\n  //         BorrowingRshipLength: res.data.Result.BorrowingRshipLength,\r\n  //       });\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       if (err.response.data.StatusCode === 404) {\r\n  //         console.log(err.response.data.Message);\r\n  //       }\r\n  //     });\r\n  // };\r\n  // const updateCreditFacilityUtilizitionById = (e) => {\r\n  //   e.preventDefault();\r\n  //   CreditFacilityUtilizitionService.updateCreditFacilityUtilizitionById(\r\n  //     creditFacilityUtilizitionId,\r\n  //     editCreditFacilityUtilizition\r\n  //   )\r\n  //     .then((response) => {\r\n  //       if (response.data.Code === 200) {\r\n  //         creditFacilityUtilizition();\r\n  //         toast.success(\"Edited successfully\", {\r\n  //           position: toast.POSITION.TOP_RIGHT,\r\n  //           toastId: \"updateCreditFacilityUtilizitionSuccess\",\r\n  //         });\r\n  //       }\r\n  //     })\r\n  //     .catch((e) => {\r\n  //       toast.error(\"Something went wrong\", {\r\n  //         position: toast.POSITION.TOP_RIGHT,\r\n  //         toastId: \"updateCreditFacilityUtilizitionSuccess\",\r\n  //       });\r\n  //     });\r\n  // };\r\n\r\n  // const [loanTypeIdForCreditUtilization, setLoanTypeIdForCreditUtilization] =\r\n  //   useState([]);\r\n  // const getLoanType = () => {\r\n  //   setTimeout(() => {\r\n  //     CommonServices.getLoanType()\r\n  //       .then((response) => {\r\n  //         if (\r\n  //           response.data.Code === 200 ||\r\n  //           response.data.Message === \"Success\"\r\n  //         ) {\r\n  //           setLoanTypeIdForCreditUtilization(response.data.Result);\r\n  //           setCreditFacilityUtilizitionErrorLoading(false);\r\n  //         } else {\r\n  //           setCreditFacilityUtilizitionErrorLoading(false);\r\n  //           setError(\"Something went wrong\");\r\n  //         }\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         if (error.response.data.StatusCode === 404) {\r\n  //           setError(\"Credit Facility Utilizition not found\");\r\n  //           setCreditFacilityUtilizitionErrorLoading(false);\r\n  //         } else if (error.response.data.StatusCode === 400) {\r\n  //           setError(\"Something went wrong\");\r\n  //           setCreditFacilityUtilizitionErrorLoading(false);\r\n  //         } else if (error.response.data.StatusCode === 401) {\r\n  //           navigate(\"/login\");\r\n  //         } else if (error.response.data.StatusCode === 403) {\r\n  //           navigate(\"/login\");\r\n  //         }\r\n  //       });\r\n  //   }, 1000);\r\n  // };\r\n  // useEffect(() => {\r\n  //   getLoanType();\r\n  // }, []);\r\n\r\n  // const [isPreshipmentFacilityModalOpen, setIsPreshipmentFacilityModalOpen] =\r\n  //   useState(false);\r\n  // function handlePreshipmentFacilityOpenModal() {\r\n  //   setIsPreshipmentFacilityModalOpen(true);\r\n  // }\r\n  // function handlePreshipmentFacilityCloseModal() {\r\n  //   setIsPreshipmentFacilityModalOpen(false);\r\n  // }\r\n  // const [preshipmentFacility, setPreshipmentFacility] = useState([]);\r\n  // const getPreshipmentFacility = (Id) => {\r\n  //   setTimeout(() => {\r\n  //     PreshipmentFacilityService.getAllPreshipmentByUtilizationId(Id)\r\n  //       .then((response) => {\r\n  //         if (\r\n  //           response.data.Code === 200 ||\r\n  //           response.data.Message === \"Success\"\r\n  //         ) {\r\n  //           setPreshipmentFacility(response.data.Result);\r\n  //           setCreditFacilityUtilizitionErrorLoading(false);\r\n  //         } else {\r\n  //           setCreditFacilityUtilizitionErrorLoading(false);\r\n  //           setError(\"Something went wrong\");\r\n  //         }\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         if (error.response.data.StatusCode === 404) {\r\n  //           setError(\"Credit Facility Utilizition not found\");\r\n  //           setCreditFacilityUtilizitionErrorLoading(false);\r\n  //         } else if (error.response.data.StatusCode === 400) {\r\n  //           setError(\"Something went wrong\");\r\n  //           setCreditFacilityUtilizitionErrorLoading(false);\r\n  //         } else if (error.response.data.StatusCode === 401) {\r\n  //           navigate(\"/login\");\r\n  //         } else if (error.response.data.StatusCode === 403) {\r\n  //           navigate(\"/login\");\r\n  //         }\r\n  //       });\r\n  //   }, 1000);\r\n  // };\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center \">\r\n      <CompanyModal\r\n        // isOpen={isCreditFacilityUtilizitionModalOpen}\r\n        // onClose={handleCreditFacilityUtilizitionCloseModal}\r\n        // title=\"credit facility utilizition detail \"\r\n      >\r\n        {/* <div className=\" min-w-screen relative min-h-screen \"> */}\r\n        {/* <div className=\"sticky\">\r\n          <div className=\"flex-direction: column-reverse\">\r\n            <div className=\"fullscreen\">\r\n              <div>\r\n                <ViewPreshipmentFacility\r\n                  isPreshipmentFacilityModalOpen={\r\n                    isPreshipmentFacilityModalOpen\r\n                  }\r\n                  handlePreshipmentFacilityCloseModal={\r\n                    handlePreshipmentFacilityCloseModal\r\n                  }\r\n                  setIsPreshipmentFacilityModalOpen={\r\n                    setIsPreshipmentFacilityModalOpen\r\n                  }\r\n                  creditFacilityUtilizitionId={creditFacilityUtilizitionId}\r\n                  preshipmentFacility={preshipmentFacility}\r\n                />\r\n                <AddCreditFacilityUtilizition\r\n                  // submitted={submitted}\r\n                  newAccountDetials={newCreditFacilityUtilizition}\r\n                  creditFacilityUtilizition={creditFacilityUtilizition}\r\n                  handleInputChangeCreditFacilityUtilizition={\r\n                    handleInputChangeCreditFacilityUtilizition\r\n                  }\r\n                  setLoanTypeId={setLoanTypeId}\r\n                  loanTypeIdForCreditUtilization={\r\n                    loanTypeIdForCreditUtilization\r\n                  }\r\n                  saveCreditFacilityUtilizition={saveCreditFacilityUtilizition}\r\n                />\r\n\r\n                <ToastContainer />\r\n                {error && <p className=\"text-red-500\">{error}</p>}\r\n                {!error && CreditFacilityUtilizitionErrorLoading ? (\r\n                  <span>\r\n                    <FaSpinner\r\n                      className=\"animate-spin rounded-full h-6 w-6 text-purple-600\"\r\n                      fontSize=\"small\"\r\n                      data-toggle=\"tooltip\"\r\n                      title=\"Click it to sign in\"\r\n                    />\r\n                    Loading...\r\n                  </span>\r\n                ) : (\r\n                  !error &&\r\n                  !CreditFacilityUtilizitionErrorLoading && (\r\n                    <table className=\"table table-bordered table-striped bg-purple-100\">\r\n                      <thead>\r\n                        <tr className=\"bg-purple-200 \">\r\n                          <th className=\"px-2 py-4\"> LoanTypeId </th>\r\n                          <th className=\"px-2 py-4\"> LoanAccount </th>\r\n                          <th className=\"px-2 py-4\"> BorrowingRshipLength </th>\r\n                          <th className=\"px-2 py-4\"> Action </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {creditFacilityUtilizition.length === 0 ? (\r\n                          <p className=\"text-red-600 p-4\">Data not found</p>\r\n                        ) : (\r\n                          creditFacilityUtilizition.map(\r\n                            (FacilityUtilizition, index) => (\r\n                              <>\r\n                                <tr\r\n                                  className=\"bg-white\r\n                    border-b border-purple-200\"\r\n                                  key={FacilityUtilizition.Id}\r\n                                >\r\n                                  <td className=\"p-2\">\r\n                                    {FacilityUtilizition.LoanType}\r\n                                  </td>\r\n                                  <td className=\"p-2\">\r\n                                    {FacilityUtilizition.LoanAccount}\r\n                                  </td>\r\n                                  <td className=\"p-2\">\r\n                                    {FacilityUtilizition.BorrowingRshipLength}\r\n                                  </td>\r\n                                  <td className=\"p-2\">\r\n                                    <LoanIconButton\r\n                                      style={{ color: \"green\" }}\r\n                                      icon={<MdModeEdit />}\r\n                                      text=\"Preshipment Facility\"\r\n                                      onClick={() => {\r\n                                        handlePreshipmentFacilityOpenModal();\r\n                                        getPreshipmentFacility(\r\n                                          FacilityUtilizition.Id\r\n                                        );\r\n                                        setCreditFacilityUtilizitionId(\r\n                                          FacilityUtilizition.Id\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    <LoanIconButton\r\n                                      style={{ color: \"green\" }}\r\n                                      icon={<MdModeEdit />}\r\n                                      text=\"Edit\"\r\n                                      onClick={() => {\r\n                                        handleCreditFacilityUtilizitionEditOpenModal();\r\n                                        getCreditFacilityUtilizitionId(\r\n                                          FacilityUtilizition.Id\r\n                                        );\r\n                                        setCreditFacilityUtilizitionId(\r\n                                          FacilityUtilizition.Id\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    <>\r\n                                      <LoanIconButton\r\n                                        style={{ color: \"red\" }}\r\n                                        icon={<IoTrashOutline />}\r\n                                        text=\"Delete\"\r\n                                        onClick={() => {\r\n                                          handleDelete(FacilityUtilizition);\r\n                                        }}\r\n                                      >\r\n                                        <ToastContainer />\r\n                                      </LoanIconButton>\r\n                                    </>\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            )\r\n                          )\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  )\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n      </CompanyModal>\r\n      {/* <CompanyModal\r\n        isOpen={isCreditFacilityUtilizitionEditModalOpen}\r\n        onClose={handleCreditFacilityUtilizitionEditCloseModal}\r\n        title=\"Modify account detail information\"\r\n      >\r\n        <div>\r\n          <form onSubmit={updateCreditFacilityUtilizitionById}>\r\n            <div className=\"grid grid-cols-1 gap-4 submit-form\">\r\n              <div className=\"submit-form \">\r\n                <div className=\"relative center justify-center flex-1 w-full max-w-full grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n                  <FormControl variant=\"standard\" sx={{ minWidth: 120 }}>\r\n                    <InputLabel id=\"countrylbl\" color=\"secondary\">\r\n                      Loan Type{\" \"}\r\n                    </InputLabel>\r\n                    <Select\r\n                      color=\"secondary\"\r\n                      onChange={(event) => {\r\n                        editCreditFacilityUtilizition.LoanTypeId =\r\n                          event.target.value;\r\n                        setLoanTypeId(event.target.value);\r\n                      }}\r\n                      labelId=\"countrylbl\"\r\n                      id=\"countrySelect\"\r\n                      label=\"Country\"\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                      </MenuItem>\r\n                      {loanTypeIdForCreditUtilization.map((yourLoan) => (\r\n                        <MenuItem\r\n                          key={yourLoan.Id}\r\n                          LoanTypeId={yourLoan.Id}\r\n                          value={yourLoan.Id}\r\n                        >\r\n                          {yourLoan.Name}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <TextField\r\n                    id=\"LoanAccount\"\r\n                    label=\"LoanAccount\"\r\n                    variant=\"standard\"\r\n                    color=\"secondary\"\r\n                    size=\"\"\r\n                    required\r\n                    value={editCreditFacilityUtilizition.LoanAccount}\r\n                    onChange={(e) =>\r\n                      setEditCreditFacilityUtilizition({\r\n                        ...editCreditFacilityUtilizition,\r\n                        LoanAccount: e.target.value,\r\n                      })\r\n                    }\r\n                    name=\"CustomerId\"\r\n                  />\r\n                  <TextField\r\n                    id=\"BorrowingRshipLength\"\r\n                    label=\"BorrowingRshipLength\"\r\n                    variant=\"standard\"\r\n                    color=\"secondary\"\r\n                    size=\"\"\r\n                    required\r\n                    value={editCreditFacilityUtilizition.BorrowingRshipLength}\r\n                    onChange={(e) =>\r\n                      setEditCreditFacilityUtilizition({\r\n                        ...editCreditFacilityUtilizition,\r\n                        BorrowingRshipLength: e.target.value,\r\n                      })\r\n                    }\r\n                    name=\"CustomerId\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex justify-center items-center\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"bg-[purple] hover:bg-purple-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline \"\r\n                  >\r\n                    Update\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </CompanyModal> */}\r\n    </div>\r\n  );\r\n};\r\nexport default ViewCreditFacilityUtilizition;\r\n"],"mappings":";AAAA,SACEA,SAAS,EACTC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,QACH,eAAe;AACtB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,cAAc,QAAQ,iBAAiB;AAChD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,4BAA4B,MAAM,gCAAgC;AACzE,OAAOC,uBAAuB,MAAM,+CAA+C;AACnF,OAAOC,gCAAgC,MAAM,oCAAoC;AACjF,OAAOC,0BAA0B,MAAM,kDAAkD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1F,MAAMC,6BAA6B,GAAGA,CAAC;EACrC;EACA;EACA;EACA;AAAA,CACD,KAAK;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACED,OAAA;IAAKE,SAAS,EAAC,iDAAiD;IAAAC,QAAA,eAC9DH,OAAA,CAACR;IACC;IACA;IACA;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAsIY;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAsFZ,CAAC;AAEV,CAAC;AAACC,EAAA,GAtdIP,6BAA6B;AAudnC,eAAeA,6BAA6B;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}